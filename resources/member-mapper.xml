<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="Member">
	
	<resultMap type="memberVO" id="selectMap">
		<result property="email" column="email"/>
		<result property="name" column="name"/>
		<result property="ageYear" column="ageYear"/>
		<result property="gender" column="gender"/>
		<result property="skintype" column="skintype"/>
		<result property="phone" column="phone"/>
		<result property="zipcode" column="zipcode"/>
		<result property="address1" column="address1"/>
		<result property="address2" column="address2"/>
		<result property="regstat" column="regstat"/>
	</resultMap>
	
	<select id="select" resultMap="selectMap">
		SELECT * FROM Member
	</select>
	
	<parameterMap type="hashMap" id="selectOne">
		<parameter property="email" mode="IN" javaType="String" jdbcType="CHAR"/>
		<parameter property="result" mode="OUT" javaType="ResultSet" jdbcType="CURSOR" resultMap="selectMap"/>
	</parameterMap>
	<select id="selectByEmail" statementType="CALLABLE" parameterMap="selectOne">
		{ call sp_member_select_byemail(?, ?) }
	</select>
	
<!-- 	<parameterMap type="String" id="accCheck">
		<parameter property="email" mode="IN" javaType="String" jdbcType="VARCHAR"/>
	</parameterMap>
	<select id="accountCheck" statementType="CALLABLE" parameterMap="accCheck">
		{ call sp_member_accountcheck(?}) }
	</select> -->
	
	<!-- 계정(이메일) 존재 유무 체크 -->
	<parameterMap type="String" id="accCheck">
		<parameter property="email" mode="IN" javaType="String" jdbcType="VARCHAR"/>
	</parameterMap>
	<select id="accountCheck" statementType="CALLABLE" parameterMap="accCheck" resultType="int">
		SELECT COUNT(email)
	    FROM Member
	    WHERE email = #{email}
	</select>
	
	<!-- 기본 배송지로 저장 -->
	<parameterMap type="memberVO" id="updateMap">
		<parameter property="zipcode" mode="IN" javaType="String" jdbcType="CHAR"/>
		<parameter property="address1" mode="IN" javaType="String" jdbcType="VARCHAR"/>
		<parameter property="address2" mode="IN" javaType="String" jdbcType="VARCHAR"/>
		<parameter property="email" mode="IN" javaType="String" jdbcType="VARCHAR"/>
	</parameterMap>
	<update id="updateDefaultAddr" statementType="CALLABLE" parameterMap="updateMap">
		{ call sp_member_update_defaultAddr(?,?,?,?) }
	</update>
	
   <parameterMap type="memberVO" id="insertMap">
      <parameter property="email" mode="IN" javaType="String" jdbcType="VARCHAR"/>
      <parameter property="name" mode="IN" javaType="String" jdbcType="VARCHAR"/>
      <parameter property="ageYear" mode="IN" javaType="int" jdbcType="INTEGER"/>
      <parameter property="gender" mode="IN" javaType="String" jdbcType="CHAR"/>
      <parameter property="skintype" mode="IN" javaType="String" jdbcType="VARCHAR"/>
      <parameter property="phone" mode="IN" javaType="String" jdbcType="VARCHAR"/>
      <parameter property="zipcode" mode="IN" javaType="String" jdbcType="CHAR"/>
      <parameter property="address1" mode="IN" javaType="String" jdbcType="VARCHAR"/>
      <parameter property="address2" mode="IN" javaType="String" jdbcType="VARCHAR"/>
   </parameterMap>
   <insert id="insert" parameterMap="insertMap">
      { call sp_member_insert(?,?,?,?,?,?,?,?,?) }
   </insert>
	<update id="update" statementType="CALLABLE" parameterMap="insertMap">
		{ call sp_member_update(?,?,?,?,?,?,?,?,?) }
	</update>
</mapper>